{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class PriceService {\n  constructor() {\n    this.prices = {};\n  }\n  setPrice(category, price) {\n    this.prices[category] = price;\n  }\n  getPrice(category) {\n    return this.prices[category] ?? 0;\n  }\n  syncCategory(category, items) {\n    const price = this.getPrice(category);\n    items.forEach(i => {\n      if (i.category === category) i.userPrice = price;\n    });\n  }\n  static {\n    this.ɵfac = function PriceService_Factory(t) {\n      return new (t || PriceService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PriceService,\n      factory: PriceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";AAGA,OAAM,MAAOA,YAAY;EADzBC;IAEU,WAAM,GAA2B,EAAE;;EAE3CC,QAAQ,CAACC,QAAgB,EAAEC,KAAa;IACtC,IAAI,CAACC,MAAM,CAACF,QAAQ,CAAC,GAAGC,KAAK;EAC/B;EAEAE,QAAQ,CAACH,QAAgB;IACvB,OAAO,IAAI,CAACE,MAAM,CAACF,QAAQ,CAAC,IAAI,CAAC;EACnC;EAEAI,YAAY,CAACJ,QAAgB,EAAEK,KAAY;IACzC,MAAMJ,KAAK,GAAG,IAAI,CAACE,QAAQ,CAACH,QAAQ,CAAC;IACrCK,KAAK,CAACC,OAAO,CAACC,CAAC,IAAG;MAAG,IAAIA,CAAC,CAACP,QAAQ,KAAKA,QAAQ,EAAEO,CAAC,CAACC,SAAS,GAAGP,KAAK;IAAE,CAAC,CAAC;EAC3E;;;uBAdWJ,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAY,SAAZZ,YAAY;MAAAa,YADC;IAAM;EAAA","names":["PriceService","constructor","setPrice","category","price","prices","getPrice","syncCategory","items","forEach","i","userPrice","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tsouf\\dofus-evaluator-webapp\\client\\src\\app\\services\\price.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PriceService {\r\n  private prices: Record<string, number> = {};\r\n\r\n  setPrice(category: string, price: number) {\r\n    this.prices[category] = price;\r\n  }\r\n\r\n  getPrice(category: string): number {\r\n    return this.prices[category] ?? 0;\r\n  }\r\n\r\n  syncCategory(category: string, items: any[]) {\r\n    const price = this.getPrice(category);\r\n    items.forEach(i => { if (i.category === category) i.userPrice = price; });\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}